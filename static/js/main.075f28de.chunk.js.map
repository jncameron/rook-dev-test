{"version":3,"sources":["CardList.js","Header.js","App.js","index.js"],"names":["CardList","_ref","cards","onCardClick","react_default","a","createElement","className","map","card","status","key","onClick","indexOf","Header","kittenize","addCard","Segment","Button","ui","animated","button","type","id","App","state","console","log","_this","newState","activeCount","i","length","setState","newCard","Date","now","prevState","concat","src_Header","this","src_CardList_0","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.075f28de.chunk.js","sourcesContent":["import React from 'react';\nimport {Button} from 'semantic-ui-react';\nimport './CardList.css';\n\nconst CardList = ({cards, onCardClick}) => {\n\n  return(\n    <div className=\"note-list ui equal width divided grid\" >\n      {cards.map(card => {\n        \n        return(\n          card.status === 'inactive'\n          ?\n          <div \n            className=\"card ui inverted red segment\"\n            key={card.key}\n            onClick={() => onCardClick(card.key, card.status)}\n          >\n          </div>\n          :\n          <div \n            className=\"card ui inverted green segment\"\n            key={card.key}\n            \n            onClick={() => onCardClick(card.key, card.status)}\n          >\n            <h1 className=\"card-title\">{cards.indexOf(card) + 1}</h1>\n          </div>\n        )\n      })\n    }\n\n  </div>\n  )}\n\nexport default CardList;\n","import React from 'react';\nimport { Segment, Button} from 'semantic-ui-react';\n\nconst Header = ({kittenize, addCard}) => (\n  <Segment>\n    <h1>Developer Test</h1>\n    <Button ui animated button\n      type=\"submit\"\n      className=\"teal\"\n      id=\"add-btn\"\n      onClick={kittenize}>\n        <div className=\"visible content\">Kittenize!</div>\n        <div className=\"hidden content\">\n          <i className=\"smile icon\"></i>\n        </div></Button>\n    <Button ui animated button\n      type=\"submit\"\n      className=\"blue\"\n      id=\"add-btn\"\n      onClick={addCard}>\n        <div className=\"visible content\">Add Card</div>\n        <div className=\"hidden content\">\n          <i className=\"plus square icon\"></i>\n        </div>\n    </Button>   \n\n  </Segment>\n)\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Segment, Button} from 'semantic-ui-react';\nimport CardList from './CardList';\nimport Header from './Header';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    cards : \n      [\n        { \n          status: 'inactive',\n          key: 'card1'\n        },\n        { \n          status: 'inactive',\n          key: 'card2'\n        },\n        { \n          status: 'inactive',\n          key: 'card3'\n        },\n        { \n          status: 'inactive',\n          key: 'card4'\n        },\n        { \n          status: 'inactive',\n          key: 'card5'\n        },\n        { \n          status: 'inactive',\n          key: 'card6'\n        }\n    ]\n  }\n\n  onCardClick = (key) => {\n    console.log(this.state.cards[0]['key'])\n    console.log(key)\n\n    let newState = this.state.cards;\n    let activeCount = 0;\n\n    for (let i=0; i < newState.length; i++) {\n      if(newState[i]['status'] === 'active') {\n        activeCount++\n      }\n      console.log(activeCount);\n    }\n\n    for (let i=0; i < newState.length; i++) {\n      if (newState[i]['key'] === key) {\n\n        if (newState[i]['status'] === 'inactive' && activeCount < 1) {\n          newState[i]['status'] = 'active'\n        } else if (newState[i]['status'] === 'active') {\n          newState[i]['status'] = 'inactive'\n        }\n\n      }\n    }\n    this.setState({cards: newState})\n  }\n\n  kittenize = () => {\n    //TODO!\n  }\n\n  addCard = () => {\n    const newCard = {\n      status: 'inactive',\n      key: Date.now()\n    }\n    this.setState(prevState => {\n      return {\n        cards: prevState.cards.concat(newCard)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header kittenize={this.kittenize} addCard={this.addCard}/>\n        <Segment >\n          <h3>Cards</h3>       \n          <CardList \n            cards={this.state.cards} \n            onCardClick={this.onCardClick}\n          />\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}